services:

  ###########################
  # MONGODB - PRIMARIO
  ###########################

  mongo-primary:
    image: mongo:6
    container_name: mongo-primary
    ports:
      - "27017:27017"
    volumes:
      - mongo-primary-data:/data/db
    command: --replSet rs0

  ###########################
  # MONGODB - SECUNDARIOS
  ###########################

  mongo-secondary1:
    image: mongo:6
    container_name: mongo-secondary1
    volumes:
      - mongo-secondary1-data:/data/db
    command: --replSet rs0

  mongo-secondary2:
    image: mongo:6
    container_name: mongo-secondary2
    volumes:
      - mongo-secondary2-data:/data/db
    command: --replSet rs0

  ###########################
  # MONGODB - CONFIGURACIÃ“N INICIAL
  ###########################

  mongo-setup:
    image: mongo:6
    depends_on:
      - mongo-primary
      - mongo-secondary1
      - mongo-secondary2
    entrypoint: >
      bash -c "
      sleep 5 &&
      mongosh --host mongo-primary:27017 --eval '
        rs.initiate({
          _id: \"rs0\",
          members: [
            { _id: 0, host: \"mongo-primary:27017\", priority: 2 },
            { _id: 1, host: \"mongo-secondary1:27017\", priority: 1 },
            { _id: 2, host: \"mongo-secondary2:27017\", priority: 1 }
          ]
        })'
      "

  ###########################
  # NODOS BACKEND
  ###########################

  backend1:
    build:
      context: ./backend
    container_name: backend1
    ports:
      - "3001:3000"
    env_file:
      - ./backend/.env
    depends_on:
      - mongo-primary

  backend2:
    build:
      context: ./backend
    container_name: backend2
    ports:
      - "3002:3000"
    env_file:
      - ./backend/.env
    depends_on:
      - mongo-primary

  backend3:
    build:
      context: ./backend
    container_name: backend3
    ports:
      - "3003:3000"
    env_file:
      - ./backend/.env
    depends_on:
      - mongo-primary

  ###########################
  # BALANCEADOR DE CARGA
  ###########################

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend1
      - backend2
      - backend3

  ###########################
  # FRONTEND
  ###########################

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env
    depends_on:
      - nginx

  ###########################
  # MONGO EXPRESS (Web DB)
  ###########################
  
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo-primary:27017,mongo-secondary1:27017,mongo-secondary2:27017/reservas-esfot?replicaSet=rs0
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin1990
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
    depends_on:
      - mongo-primary

volumes:
  mongo-primary-data:
  mongo-secondary1-data:
  mongo-secondary2-data:
